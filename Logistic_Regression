import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

df = pd.read_csv('train_and_test2.csv')
df_columns = np.transpose(df.columns.values.tolist())

print(df_columns)

age_train, age_test, sex_train, sex_test, fare_train, fare_test, \
sib_train, sib_test, surv_train, surv_test = \
    train_test_split(df['Age'], df['Sex'], df['Fare'], df['sibsp'],
                     df['2urvived'],
                     test_size = 0.25, random_state = 0)
train_X = np.transpose(pd.DataFrame(data = [age_train, sex_train, fare_train, sib_train]))
test_X = np.transpose(pd.DataFrame(data = [age_test, sex_test, fare_test, sib_test]))

Logit = LogisticRegression(random_state = 0,
                           fit_intercept = True,
                           solver = 'lbfgs',
                           multi_class = 'multinomial').fit(train_X, surv_train)

Coefficients = np.transpose(pd.DataFrame(Logit.coef_))
Coefficients.columns = ['Coefficients']

Prediction = Logit.predict(test_X)
test_DF = np.transpose(pd.DataFrame(data = [Prediction,
                               surv_test]))
test_DF.columns = ['Predict', 'Actual']
test_DF['Test'] = np.where(test_DF['Predict'] == test_DF['Actual'], 1, 0)
test_Sum = sum(test_DF['Test'])
test_Results = test_Sum / len(test_DF)

print(test_DF.head())
print(Coefficients)
print(test_Results)
